#install.packages("pacman")
library(pacman)
pacman::p_load(pacman,dplyr, ggplot2, plotly,tidyr, rio, gridExtra, scales, ggcorrplot, caret, e1071)
# CSV
df <- import("./top2018.csv")
head(df)
# View in table format the dataset
View(df)
df$key <- as.factor(df$key)
df$mode <- as.factor(df$mode)
# CSV
df <- import("./top2018.csv")
head(df)
#install.packages("pacman")
library(pacman)
pacman::p_load(pacman,dplyr, ggplot2, plotly,tidyr, rio, gridExtra, scales, ggcorrplot, caret, e1071)
setwd('C:\\Users\\hp\\Desktop\\AI\\R Programming\\Dashboard\\R Shiny Markdown')
getwd()
setwd('C:\\Users\\hp\\Desktop\\AI\\R Programming\\Dashboard\\R Shiny Markdown')
# CSV
df <- import("./top2018.csv")
head(df)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ggplot(., aes(reorder(artists, +freq), freq))+
geom_bar(stat = "identity", fill = "royalblue1", col = "grey10")+
coord_flip()+
labs(x = "" ,y = "Top 10 2018 Artists", title = "Artists with most hits in Top 100")+
geom_text(aes(label = freq, y = freq/2))
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ggplot(., aes(reorder(artists, +freq), freq))+
geom_bar(stat = "identity", fill = "royalblue1", col = "grey10")+
coord_flip()+
labs(x = "" ,y = "Top 10 2018 Artists", title = "Artists with most hits in Top 100")+
geom_text(aes(label = freq, y = freq/2))
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:10)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1) %>%
artists
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1) %>%
head(artists)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1) %>%
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ggplot(., aes(reorder(artists, +freq), freq))+
geom_bar(stat = "identity", fill = "royalblue1", col = "grey10")+
coord_flip()+
labs(x = "" ,y = "Top 10 2018 Artists", title = "Artists with most hits in Top 100")+
geom_text(aes(label = freq, y = freq/2))
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
artists[slice(1:1)]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1)[artists]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
a <- slice(1:1)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
a <- data.frame(slice(1:1))
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
a <- data.frame(slice(1:1))
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1)[,0]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1)[,1]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:1)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
artists(1)
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
artists[1]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
artists[1]
df$artists
df$artists[3]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
df$artists[1]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
df$artists[3]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
artists[3]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1) %>%
df$artists[3]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1) %>%
artists
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1) %>%
d <- artists
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1) %>%
d <- artists
df$artists[3]
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1) %>%
df$artists[3]
plot_ly(
x = c('C','C#','D','D#','E','F','F#','G','G#','A','A#','B'),
y = df$key,
name = "SF Zoo",
type = "bar"
)
#renderPlotly({
ggplot(df, aes(x=key, fill=key)) +
geom_bar() +
theme(legend.position='none') +
labs(title = "Sound Keys Counts (Pitch Class notation)") +
scale_x_discrete(labels = c('C','C#','D','D#','E','F','F#','G','G#','A','A#','B'))
sum(df$key==0)
sum(df$key==1)
scale = c(c,c2,d,d2,e,f,f2,g,g2,a,a2,b)
c <- sum(df$key==0)
c2 <- sum(df$key==1)
d <- sum(df$key==2)
d2 <- sum(df$key==3)
e <- sum(df$key==4)
f <- sum(df$key==5)
f2 <- sum(df$key==6)
g <- sum(df$key==7)
g2 <- sum(df$key==8)
a <- sum(df$key==9)
a2 <- sum(df$key==10)
b <- sum(df$key==11)
scale = c(c,c2,d,d2,e,f,f2,g,g2,a,a2,b)
plot_ly(
x = c('C','C#','D','D#','E','F','F#','G','G#','A','A#','B'),
y = scale,
name = "SF Zoo",
type = "bar"
)
plot_ly(
x = c('C','C#','D','D#','E','F','F#','G','G#','A','A#','B'),
y = scale,
type = "bar"
)
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(openintro)
library(highcharter)
library(ggvis)
library(pacman)
pacman::p_load(pacman,dplyr, ggplot2, plotly,tidyr, rio, gridExtra, scales, ggcorrplot, caret)
plot_ly(
x = c('C','C#','D','D#','E','F','F#','G','G#','A','A#','B'),
y = scale,
type = "bar"
)
ggplot(df, aes(x=mode, fill=mode)) +
geom_bar() +
theme(legend.position='none') +
labs(title = "Trak Modality") +
scale_x_discrete(labels = c('Minor','Major'))
#renderPlotly({
ggplot(df, aes(x=key, fill=key)) +
geom_bar() +
theme(legend.position='none') +
labs(title = "Sound Keys Counts (Pitch Class notation)") +
scale_x_discrete(labels = c('C','C#','D','D#','E','F','F#','G','G#','A','A#','B'))
df$key <- as.factor(df$key)
df$mode <- as.factor(df$mode)
df$time_signature <- as.factor(df$time_signature)
#renderPlotly({
ggplot(df, aes(x=key, fill=key)) +
geom_bar() +
theme(legend.position='none') +
labs(title = "Sound Keys Counts (Pitch Class notation)") +
scale_x_discrete(labels = c('C','C#','D','D#','E','F','F#','G','G#','A','A#','B'))
ggplot(df, aes(x=mode, fill=mode)) +
geom_bar() +
theme(legend.position='none') +
labs(title = "Trak Modality") +
scale_x_discrete(labels = c('Minor','Major'))
plot_ly(
x = c('Minor','Major'),
y = c(m1,m2),
type = "bar"
)
m1 <- sum(df$mode==0)
m2 <- sum(df$mode==1)
plot_ly(
x = c('Minor','Major'),
y = c(m1,m2),
type = "bar"
)
m1 <- sum(df$mode==0)
ggplot(df, aes(x=time_signature, fill=time_signature)) +
geom_bar() +
theme(legend.position='none') +
labs(title = "Time Signature (how many beats are in each bar)")
t1 <- sum(df$time_signature=3)
t2 <- sum(df$time_signature==4)
t3 <- sum(df$time_signature==5)
plot_ly(
x = c('3','4','5'),
y = c(t1,t2,t3),
type = "bar"
)
t1 <- sum(df$time_signature=3)
t2 <- sum(df$time_signature==4)
t1 <- sum(df$time_signature==3)
t2 <- sum(df$time_signature==4)
t3 <- sum(df$time_signature==5)
plot_ly(
x = c('3','4','5'),
y = c(t1,t2,t3),
type = "bar"
)
q <- sum(df$tempo > 168)
w <- sum(df$tempo >= 110 & df$tempo <= 168)
e <- sum(df$tempo >= 76 & df$tempo <= 108)
r <- sum(df$tempo >= 66 & df$tempo <= 76)
t <- sum(df$tempo < 65)
plot_ly(
x = c('Presto', 'Allegro', 'Andante','Adagio', 'Lenght'),
y = c(q,w,e,r,t),
type = "bar"
)
